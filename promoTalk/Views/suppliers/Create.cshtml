@model promoTalk.Models.supplier

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>supplier</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.supplierName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.supplierName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.supplierName, "", new { @class = "text-danger" })
            </div>
        </div>
       
        @Html.HiddenFor(model => model.SupplierFor)
        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.countryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.countryID, new SelectList(ViewBag.countryID, "countryID", "countryName"), " country ", new { @class = "form-control", onChange= "fillState()"})
              
                @Html.ValidationMessageFor(model => model.countryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StateID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StateID, new SelectList(ViewBag.StateID, "StateID", "StateName"), " State ", new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>

        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = @Model.SupplierFor })
</div>

@*<script>
    function fillState()
    {
        var countryID = $('#countryID').val();
        if (countryID != "")
        {
           
              $.ajax({
            url: '/suppliers/fillState',
            type: 'GET',           
            data: { 'countryID': countryID },
            success: function (result) {
                
                $("#StateID").html("");
                $("#StateID").append($('<option></option>').val('').html(' State'));
                $.each($.parseJSON(result), function (i, VSC) {
                    $("#StateID").append($('<option></option>').val(VSC.StateID).html(VSC.StateName))
                })

            },
            error: function () {

                bootbox.alert({
                    title: "Alert !",
                    message: '<p>Whooaaa! Something went wrong..</p>',
                    timeOut: 2000

                });
            },
            });
        }
    }
</script>*@
@{var res = ViewBag.result;}
@{ var isOffer = Model.SupplierFor ;}
<script>
    
    if ('@res'!= null)
    {
        if ('@res' == 's')
        {
            bootbox.alert({
                title: "Success !",
                message: "Record saved",

                callback: function (result) {
                    window.location.href = '/suppliers/Index/@isOffer';
                }
            })
        }
        if ('@res' == 'f') {
            bootbox.alert({
                title: "Failure !",
                message: '<p>Record not saved .</p>',
                timeOut: 2000
            });
        }
    }
</script>
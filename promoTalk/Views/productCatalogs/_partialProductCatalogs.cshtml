@model IEnumerable<promoTalk.Models.getProductCatalog_sp_Result>

@{ var isOffer = ViewBag.isOffer;}
<table class="table"  id="tblData">
    <thead>
        <tr>
            <th>Sr</th>
            <th>
                 Title
            </th>

            <th>
               Categories
            </th>

            <th>
                Supplier
            </th>
            @{ if (!isOffer)
                {
                    <th>
                       Premium
                    </th>
                    <th>
                       PDF
                    </th>
                 }
            }
            <th>
              Created Date
            </th>
            <th>Action</th>
        </tr>
    </thead>

    @{
        var a = Model.Count();

    }
    <tbody>
        @if (a == 0)
        {
            <tr>
                <td colspan="6">
                    No Result Found
                </td>
            </tr>
        }



        @{    int i = 0; }
        @foreach (var item in Model)
        {
            <tr>
                <td>@(i += 1)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.productTitle)
                </td>
                <td>
                  @{ Html.RenderAction("catalogcategory", new { id = item.catalogID }); }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.supplierName)
                </td>
          @{ if (!isOffer)
              {
                <td>
                    @{if (item.isPremeum != null)
                        {
                            @item.isPremeum
                        }
                    }
                   
                </td>
                <td>
                    @{ if (item.pdfURL != null)
                        {
                            <a href='@item.pdfURL'><i class="glyphicon glyphicon-download"></i></a>
                            <a href="page?pdf=" @item.thumbImageURL>View</a>
                        }
                    }
                </td>
                        }
        }
               
                    <td>
                    @item.createdDate.Value.ToString("dd-MMM-yyyy")
                </td>
                
                <td>
                    <a href="@Url.Action("Edit", "productCatalogs", new { id = item.catalogID })"><i class="glyphicon glyphicon-pencil"></i></a>
                    <a onclick="RemoveRecord('productCatalog',@item.catalogID)"><i class="glyphicon glyphicon-trash"></i></a>
                </td>
            </tr>
         }
    </tbody>
</table>
<script>
    function RemoveRecord(tableName, ID)
    {
        bootbox.confirm({
            title: "Confirmation !",
            message: "Are you sure to delete selected record",
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> Cancel'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> Confirm'
                }
            },
            callback: function (result) {
                if (result) {
                    
                    $.ajax({
                        url: '/Account/daleteRecords',
                        type: 'POST',
                        data: { 'tableName': tableName,'id': ID },
                        success: function (data) {
                            
                            if (data == 1) {
                                bootbox.confirm({
                                    title: "Confirmation !",
                                    message: "Record deleted",
                                    buttons: {
                                        confirm: {
                                            label: '<i class="fa fa-check"></i> Confirm'
                                        }
                                    },
                                    callback: function (result) {
                                        window.location.href = window.location
                                    }
                                })
                            }
                            else {
                                bootbox.alert({
                                    title: "Alert !",
                                    message: '<p>Some thing went wrong .</p>',
                                    timeOut: 2000
                                });

                            }
                        },
                        error: function ()
                        {
                            bootbox.alert({
                                title: "Alert !",
                                message: '<p>Some thing went wrong .</p>',
                                timeOut: 2000
                            });
                        }
                    });
                }

            }
        });
    }
</script>

<script>
    $(function () {
        $("#tblData").slimtable({
            tableData: null,
            dataUrl: null,
            itemsPerPage: 100,
            ipp_list: [10, 50, 100],
            colSettings: [],
            text1: "items/page",
            text2: "Loading...",
            sortStartCB: null,
            sortEndCB: null,
            aoColumnDefs: [{
                'bSortable': false,
                'aTargets': [-1] /* 1st one, start by the right */
            }]
        });
    });
</script>
@model promoTalk.Models.productCategory

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutInternal.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>productCategory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.productCategory1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productCategory1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productCategory1, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.SupplierFor)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = @Model.SupplierFor });
</div>
@{var res = ViewBag.result;}
@{ var isOffer = Model.SupplierFor;}
<script>
    
    if ('@res'!= null)
    {
        if ('@res' == 's')
        {
            bootbox.alert({
                title: "Success !",
                message: "Record saved",

                callback: function (result) {
                    window.location.href = '/productCategories/Index/@isOffer';
                }
            })
        }
        if ('@res' == 'f') {
            bootbox.alert({
                title: "Failure !",
                message: '<p>Record not saved .</p>',
                timeOut: 2000
            });
        }
    }
</script>
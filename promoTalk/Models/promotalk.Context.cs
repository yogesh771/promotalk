//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace promoTalk.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class promotalkEntities : DbContext
    {
        public promotalkEntities()
            : base("name=promotalkEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppErrorLog> AppErrorLogs { get; set; }
        public virtual DbSet<buisinessInformation> buisinessInformations { get; set; }
        public virtual DbSet<buisinessService> buisinessServices { get; set; }
        public virtual DbSet<catalogCatagory> catalogCatagories { get; set; }
        public virtual DbSet<category> categories { get; set; }
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<marketing> marketings { get; set; }
        public virtual DbSet<news> news { get; set; }
        public virtual DbSet<productCatalog> productCatalogs { get; set; }
        public virtual DbSet<productCategory> productCategories { get; set; }
        public virtual DbSet<sendGridDetail> sendGridDetails { get; set; }
        public virtual DbSet<service> services { get; set; }
        public virtual DbSet<state> states { get; set; }
        public virtual DbSet<SubscriberInfo> SubscriberInfoes { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<tbl_customOrder> tbl_customOrder { get; set; }
        public virtual DbSet<tbl_events> tbl_events { get; set; }
        public virtual DbSet<technology> technologies { get; set; }
        public virtual DbSet<user> users { get; set; }
    
        public virtual ObjectResult<getSupplier_sp_Result> getSupplier_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSupplier_sp_Result>("getSupplier_sp");
        }
    
        public virtual int RemoveImage(Nullable<int> id, string modulename)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var modulenameParameter = modulename != null ?
                new ObjectParameter("Modulename", modulename) :
                new ObjectParameter("Modulename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveImage", idParameter, modulenameParameter);
        }
    
        public virtual ObjectResult<string> getmonthyear(Nullable<bool> isFetureEvent)
        {
            var isFetureEventParameter = isFetureEvent.HasValue ?
                new ObjectParameter("isFetureEvent", isFetureEvent) :
                new ObjectParameter("isFetureEvent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getmonthyear", isFetureEventParameter);
        }
    
        public virtual ObjectResult<search_result_Result> search_result(string searchtext)
        {
            var searchtextParameter = searchtext != null ?
                new ObjectParameter("searchtext", searchtext) :
                new ObjectParameter("searchtext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<search_result_Result>("search_result", searchtextParameter);
        }
    
        public virtual ObjectResult<getProductCatalog_sp_Result> getProductCatalog_sp(Nullable<int> productCategoryID, Nullable<int> supplierID, Nullable<int> isOffer, Nullable<int> isPremium)
        {
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("productCategoryID", productCategoryID) :
                new ObjectParameter("productCategoryID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("supplierID", supplierID) :
                new ObjectParameter("supplierID", typeof(int));
    
            var isOfferParameter = isOffer.HasValue ?
                new ObjectParameter("isOffer", isOffer) :
                new ObjectParameter("isOffer", typeof(int));
    
            var isPremiumParameter = isPremium.HasValue ?
                new ObjectParameter("isPremium", isPremium) :
                new ObjectParameter("isPremium", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProductCatalog_sp_Result>("getProductCatalog_sp", productCategoryIDParameter, supplierIDParameter, isOfferParameter, isPremiumParameter);
        }
    }
}
